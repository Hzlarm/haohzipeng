Openwrt GNU Debugger（GDB）

第一步
	首先make menuconfig,  选择gdb相关选项
	添加 gdb
	Advanced configuration options (for developers) → Toolchain Options → Build gdb
	添加 gdbserver
	Development → gdbserver
第二步
		在需要调试的包（package)的Makefile增加调试选项
		TARGET_CFLAGS += -ggdb3
	或者：
		单独编译包时 
		make package/xxxxx/{clean,compile} V=s CONFIG_DEBUG=y

	或者:
		使能debug选项：make menuconfig
		Global build settings > Compile packages with debugging info


第三步 
	在目标板上(OpenWRT路由）上开启gdbserver
	gdbserver :9000 /bin/hellogdb


第四步， 
	在编译主机上开启gdb(假如调试 hellogdb)
	./scripts/remote-gdb 192.168.1.1:9000 ./build_dir/target-*/hellogdb/hellogdb
	./scripts/remote-gdb 192.168.0.68:9000 ./build_dir/target-mipsel_24kec+dsp_uClibc-0.9.33.2/hellogdb/hellogdb






















现在可以看到gdb相关命令行提示， 可以设置断点， 开始执行程序以及现实调用栈等等， 具体请参考gdb调试的命令行

(gdb) b source-file.c:123
(gdb) c
(gdb) bt

如果要重新启动程序，则需要设置远程路径和参数
(gdb) set remote exec-file /usr/bin/blah
(gdb) set args -v -x -merry-fishing
(gdb) run


